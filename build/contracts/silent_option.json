{
  "contractName": "silent_option",
  "abi": [
    {
      "name": "setup",
      "outputs": [],
      "inputs": [
        {
          "type": "address",
          "name": "_issuer"
        },
        {
          "type": "address",
          "name": "_buyer"
        },
        {
          "type": "address",
          "name": "_base_addr"
        },
        {
          "type": "address",
          "name": "_asset_addr"
        },
        {
          "type": "uint256",
          "name": "_fee"
        },
        {
          "type": "bytes32",
          "name": "_strike_price_base_hash"
        },
        {
          "type": "bytes32",
          "name": "_strike_price_quote_hash"
        },
        {
          "type": "uint256",
          "name": "_volume"
        },
        {
          "type": "uint256",
          "unit": "sec",
          "name": "_maturity_time"
        },
        {
          "type": "uint256",
          "unit": "sec",
          "name": "_expiry_time"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 456081
    },
    {
      "name": "collateralize",
      "outputs": [],
      "inputs": [],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 39135
    },
    {
      "name": "pay_fee",
      "outputs": [],
      "inputs": [],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 39366
    },
    {
      "name": "exercise_from_asset",
      "outputs": [],
      "inputs": [
        {
          "type": "uint256",
          "name": "strike_price_base"
        },
        {
          "type": "uint256",
          "name": "strike_price_quote"
        },
        {
          "type": "bytes32",
          "name": "salt"
        },
        {
          "type": "uint256",
          "name": "asset_volume_exercised"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 80794
    },
    {
      "name": "exercise_from_base",
      "outputs": [],
      "inputs": [
        {
          "type": "uint256",
          "name": "strike_price_base"
        },
        {
          "type": "uint256",
          "name": "strike_price_quote"
        },
        {
          "type": "bytes32",
          "name": "salt"
        },
        {
          "type": "uint256",
          "name": "base_volume_exercised"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 80824
    },
    {
      "name": "expire",
      "outputs": [],
      "inputs": [],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 39493
    },
    {
      "name": "get_info",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        },
        {
          "type": "address",
          "name": "out"
        },
        {
          "type": "address",
          "name": "out"
        },
        {
          "type": "address",
          "name": "out"
        },
        {
          "type": "uint256",
          "name": "out"
        },
        {
          "type": "bytes32",
          "name": "out"
        },
        {
          "type": "bytes32",
          "name": "out"
        },
        {
          "type": "uint256",
          "name": "out"
        },
        {
          "type": "uint256",
          "unit": "sec",
          "name": "out"
        },
        {
          "type": "uint256",
          "unit": "sec",
          "name": "out"
        },
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 2974
    },
    {
      "name": "issuer",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 791
    },
    {
      "name": "buyer",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 821
    },
    {
      "name": "base_addr",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 851
    },
    {
      "name": "asset_addr",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 881
    },
    {
      "name": "fee",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 911
    },
    {
      "name": "strike_price_base_hash",
      "outputs": [
        {
          "type": "bytes32",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 941
    },
    {
      "name": "strike_price_quote_hash",
      "outputs": [
        {
          "type": "bytes32",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 971
    },
    {
      "name": "volume",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1001
    },
    {
      "name": "maturity_time",
      "outputs": [
        {
          "type": "uint256",
          "unit": "sec",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1031
    },
    {
      "name": "expiry_time",
      "outputs": [
        {
          "type": "uint256",
          "unit": "sec",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1061
    },
    {
      "name": "state",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1091
    }
  ],
  "bytecode": "0x61099256600436101561000d57610988565b600035601c52740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a0526372d247e660005114156101895734156100ba57600080fd5b60043560205181106100cb57600080fd5b5060243560205181106100dd57600080fd5b5060443560205181106100ef57600080fd5b50606435602051811061010157600080fd5b50600a541561010f57600080fd5b6064356044351861011f57600080fd5b6101043561012435114261012435111661013857600080fd5b60043560005560243560015560443560025560643560035560843560045560a43560055560c43560065560e4356007556101043560085561012435600955604435600b55606435600c556001600a55005b63eef9a8d5600051141561023d5734156101a257600080fd5b60005433146101b057600080fd5b6001600a54146101bf57600080fd5b42600954116101cd57600080fd5b600c543b6101da57600080fd5b600c5430186101e857600080fd5b602061022060646323b872dd6101605260005461018052306101a0526007546101c05261017c6000600c545af161021e57600080fd5b60005061022051610140526101405161023657600080fd5b6002600a55005b639f771e1e60005114156102f357341561025657600080fd5b600154331461026457600080fd5b6002600a541461027357600080fd5b426009541161028157600080fd5b600b543b61028e57600080fd5b600b54301861029c57600080fd5b602061022060646323b872dd61016052600154610180526000546101a0526004546101c05261017c6000600b545af16102d457600080fd5b6000506102205161014052610140516102ec57600080fd5b6003600a55005b600015610518575b6101e0526101405261016052610180526101a0526101c05242600854111542600954111661032857600080fd5b6004600a54146003600a54141761033e57600080fd5b60006101a0511161034e57600080fd5b6007546101c051111560006101c051111661036857600080fd5b6101405161020052610160516102205260006102005160208261026001015260208101905061018051602082610260010152602081019050806102605261026090508051602082012090506102405260006102205160208261030001015260208101905061018051602082610300010152602081019050806103005261030090508051602082012090506102e052600554610240511461040757600080fd5b6006546102e0511461041857600080fd5b600b543b61042557600080fd5b600b54301861043357600080fd5b602061046060646323b872dd6103a0526001546103c0526000546103e0526101a051610400526103bc6000600b545af161046c57600080fd5b60005061046051610380526103805161048457600080fd5b600c543b61049157600080fd5b600c54301861049f57600080fd5b602061056060646323b872dd6104a0526000546104c0526001546104e0526101c051610500526104bc6000600c545af16104d857600080fd5b6000506105605161048052610480516104f057600080fd5b6101c051600754101561050257600080fd5b6101c051600754036007556004600a556101e051565b637adce17560005114156105da57341561053157600080fd5b600154331461053f57600080fd5b60043561054b57600080fd5b600435606435151561055e57600061057e565b60243560643560243560643502041461057657600080fd5b602435606435025b0461014052610140516399642c5d610180526004356101a0526024356101c0526044356101e05261014051610200526064356102205261022051610200516101e0516101c0516101a051600658016102fb565b61014052600050005b6380962928600051141561069c5734156105f357600080fd5b600154331461060157600080fd5b60243561060d57600080fd5b6024356064351515610620576000610640565b60043560643560043560643502041461063857600080fd5b600435606435025b0461014052610140516399642c5d610180526004356101a0526024356101c0526044356101e05260643561020052610140516102205261022051610200516101e0516101c0516101a051600658016102fb565b61014052600050005b6379599f9660005114156107535734156106b557600080fd5b60005433146106c357600080fd5b6002600a5414426009541115176106d957600080fd5b6005600a54186106e857600080fd5b600c543b6106f557600080fd5b600c54301861070357600080fd5b6020610200604463a9059cbb61016052600054610180526007546101a05261017c6000600c545af161073457600080fd5b60005061020051610140526101405161074c57600080fd5b6005600a55005b636058348860005114156107da57341561076c57600080fd5b61016061014052610160600054815260015481602001526002548160400152600354816060015260045481608001526005548160a001526006548160c001526007548160e00152600854816101000152600954816101200152600a548161014001525061014051610160f350005b631d14384860005114156108015734156107f357600080fd5b60005460005260206000f350005b637150d8ae600051141561082857341561081a57600080fd5b60015460005260206000f350005b63a77f5599600051141561084f57341561084157600080fd5b60025460005260206000f350005b635f727189600051141561087657341561086857600080fd5b60035460005260206000f350005b63ddca3f43600051141561089d57341561088f57600080fd5b60045460005260206000f350005b631be0fadd60005114156108c45734156108b657600080fd5b60055460005260206000f350005b635b508edf60005114156108eb5734156108dd57600080fd5b60065460005260206000f350005b63c618a1e4600051141561091257341561090457600080fd5b60075460005260206000f350005b63879a031a600051141561093957341561092b57600080fd5b60085460005260206000f350005b63fe3f3b81600051141561096057341561095257600080fd5b60095460005260206000f350005b63c19d93fb600051141561098757341561097957600080fd5b600a5460005260206000f350005b5b60006000fd5b61000461099203610004600039610004610992036000f3",
  "deployedBytecode": "0x600436101561000d57610988565b600035601c52740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a0526372d247e660005114156101895734156100ba57600080fd5b60043560205181106100cb57600080fd5b5060243560205181106100dd57600080fd5b5060443560205181106100ef57600080fd5b50606435602051811061010157600080fd5b50600a541561010f57600080fd5b6064356044351861011f57600080fd5b6101043561012435114261012435111661013857600080fd5b60043560005560243560015560443560025560643560035560843560045560a43560055560c43560065560e4356007556101043560085561012435600955604435600b55606435600c556001600a55005b63eef9a8d5600051141561023d5734156101a257600080fd5b60005433146101b057600080fd5b6001600a54146101bf57600080fd5b42600954116101cd57600080fd5b600c543b6101da57600080fd5b600c5430186101e857600080fd5b602061022060646323b872dd6101605260005461018052306101a0526007546101c05261017c6000600c545af161021e57600080fd5b60005061022051610140526101405161023657600080fd5b6002600a55005b639f771e1e60005114156102f357341561025657600080fd5b600154331461026457600080fd5b6002600a541461027357600080fd5b426009541161028157600080fd5b600b543b61028e57600080fd5b600b54301861029c57600080fd5b602061022060646323b872dd61016052600154610180526000546101a0526004546101c05261017c6000600b545af16102d457600080fd5b6000506102205161014052610140516102ec57600080fd5b6003600a55005b600015610518575b6101e0526101405261016052610180526101a0526101c05242600854111542600954111661032857600080fd5b6004600a54146003600a54141761033e57600080fd5b60006101a0511161034e57600080fd5b6007546101c051111560006101c051111661036857600080fd5b6101405161020052610160516102205260006102005160208261026001015260208101905061018051602082610260010152602081019050806102605261026090508051602082012090506102405260006102205160208261030001015260208101905061018051602082610300010152602081019050806103005261030090508051602082012090506102e052600554610240511461040757600080fd5b6006546102e0511461041857600080fd5b600b543b61042557600080fd5b600b54301861043357600080fd5b602061046060646323b872dd6103a0526001546103c0526000546103e0526101a051610400526103bc6000600b545af161046c57600080fd5b60005061046051610380526103805161048457600080fd5b600c543b61049157600080fd5b600c54301861049f57600080fd5b602061056060646323b872dd6104a0526000546104c0526001546104e0526101c051610500526104bc6000600c545af16104d857600080fd5b6000506105605161048052610480516104f057600080fd5b6101c051600754101561050257600080fd5b6101c051600754036007556004600a556101e051565b637adce17560005114156105da57341561053157600080fd5b600154331461053f57600080fd5b60043561054b57600080fd5b600435606435151561055e57600061057e565b60243560643560243560643502041461057657600080fd5b602435606435025b0461014052610140516399642c5d610180526004356101a0526024356101c0526044356101e05261014051610200526064356102205261022051610200516101e0516101c0516101a051600658016102fb565b61014052600050005b6380962928600051141561069c5734156105f357600080fd5b600154331461060157600080fd5b60243561060d57600080fd5b6024356064351515610620576000610640565b60043560643560043560643502041461063857600080fd5b600435606435025b0461014052610140516399642c5d610180526004356101a0526024356101c0526044356101e05260643561020052610140516102205261022051610200516101e0516101c0516101a051600658016102fb565b61014052600050005b6379599f9660005114156107535734156106b557600080fd5b60005433146106c357600080fd5b6002600a5414426009541115176106d957600080fd5b6005600a54186106e857600080fd5b600c543b6106f557600080fd5b600c54301861070357600080fd5b6020610200604463a9059cbb61016052600054610180526007546101a05261017c6000600c545af161073457600080fd5b60005061020051610140526101405161074c57600080fd5b6005600a55005b636058348860005114156107da57341561076c57600080fd5b61016061014052610160600054815260015481602001526002548160400152600354816060015260045481608001526005548160a001526006548160c001526007548160e00152600854816101000152600954816101200152600a548161014001525061014051610160f350005b631d14384860005114156108015734156107f357600080fd5b60005460005260206000f350005b637150d8ae600051141561082857341561081a57600080fd5b60015460005260206000f350005b63a77f5599600051141561084f57341561084157600080fd5b60025460005260206000f350005b635f727189600051141561087657341561086857600080fd5b60035460005260206000f350005b63ddca3f43600051141561089d57341561088f57600080fd5b60045460005260206000f350005b631be0fadd60005114156108c45734156108b657600080fd5b60055460005260206000f350005b635b508edf60005114156108eb5734156108dd57600080fd5b60065460005260206000f350005b63c618a1e4600051141561091257341561090457600080fd5b60075460005260206000f350005b63879a031a600051141561093957341561092b57600080fd5b60085460005260206000f350005b63fe3f3b81600051141561096057341561095257600080fd5b60095460005260206000f350005b63c19d93fb600051141561098757341561097957600080fd5b600a5460005260206000f350005b5b60006000fd",
  "source": "from vyper.interfaces import ERC20\n\n## Basic information\n# Buyer and issuer of the option\nissuer: public(address)\nbuyer: public(address)\n# Address of the base (that you pay), asset (being bought)\nbase_addr: public(address)\nasset_addr: public(address)\n\n## Financial information\n# Fee\nfee: public(uint256)\n# Strike price [i.e. (strike_price_base * base_volume) / strike_price_quote = asset_volume]\nstrike_price_base_hash: public(bytes32)\nstrike_price_quote_hash: public(bytes32)\nvolume: public(uint256)\n# Option can be exercised between maturity_time and expiry_time\nmaturity_time: public(timestamp)\nexpiry_time: public(timestamp)\n\n## Contract states\nstate: public(uint256)\nSTATE_UNINITIALIZED: constant(uint256) = 0\nSTATE_INITIALIZED: constant(uint256) = 1\nSTATE_COLLATERALIZED: constant(uint256) = 2\nSTATE_ACTIVE: constant(uint256) = 3\nSTATE_EXERCISED: constant(uint256) = 4\nSTATE_EXPIRED: constant(uint256) = 5\n\n## External contracts\n# Callable base and asset ERC20s\nbase: ERC20\nasset: ERC20\n\n@public\ndef setup(_issuer: address, _buyer: address,\n          _base_addr: address, _asset_addr: address,\n          _fee: uint256, _strike_price_base_hash: bytes32, _strike_price_quote_hash: bytes32,\n          _volume: uint256,\n          _maturity_time: timestamp, _expiry_time: timestamp):\n    assert (self.state == STATE_UNINITIALIZED)\n    assert (_base_addr != _asset_addr)\n    assert (_expiry_time > block.timestamp) and (_expiry_time > _maturity_time)\n\n    self.issuer = _issuer\n    self.buyer = _buyer\n    self.base_addr = _base_addr\n    self.asset_addr = _asset_addr\n    self.fee = _fee\n    self.strike_price_base_hash = _strike_price_base_hash\n    self.strike_price_quote_hash = _strike_price_quote_hash\n    self.volume = _volume\n    self.maturity_time = _maturity_time\n    self.expiry_time = _expiry_time\n\n    self.base = ERC20(_base_addr)\n    self.asset = ERC20(_asset_addr)\n\n    self.state = STATE_INITIALIZED\n\n## Collateralizes option\n@public\ndef collateralize():\n    assert (msg.sender == self.issuer)\n    assert (self.state == STATE_INITIALIZED)\n    assert (self.expiry_time > block.timestamp)\n\n    asset_transfer: bool = self.asset.transferFrom(self.issuer, self, self.volume)\n    assert asset_transfer\n\n    self.state = STATE_COLLATERALIZED\n\n## Pays fee to issuer\n@public\ndef pay_fee():\n    assert (msg.sender == self.buyer)\n    assert (self.state == STATE_COLLATERALIZED)\n    assert (self.expiry_time > block.timestamp)\n\n    base_transfer: bool = self.base.transferFrom(self.buyer, self.issuer, self.fee)\n    assert base_transfer\n\n    self.state = STATE_ACTIVE\n\n## Exercises the option and refunds the issuer for unused volume.\n# Internal function for core logic\n@private\ndef exercise_internal(strike_price_base: uint256, strike_price_quote: uint256,\n                      salt: bytes32,\n                      base_volume_exercised: uint256, asset_volume_exercised: uint256):\n    assert (self.expiry_time > block.timestamp) and (self.maturity_time <= block.timestamp)\n    assert (self.state == STATE_ACTIVE) or (self.state == STATE_EXERCISED)\n    assert (base_volume_exercised > 0)\n    assert (asset_volume_exercised > 0) and (asset_volume_exercised <= self.volume)\n\n    strike_price_base_bytes: bytes32 = convert(strike_price_base, bytes32)\n    strike_price_quote_bytes: bytes32 = convert(strike_price_quote, bytes32)\n    strike_price_base_hash_claimed: bytes32 = keccak256(concat(strike_price_base_bytes, salt))\n    strike_price_quote_hash_claimed: bytes32 = keccak256(concat(strike_price_quote_bytes, salt))\n    assert (strike_price_base_hash_claimed == self.strike_price_base_hash)\n    assert (strike_price_quote_hash_claimed == self.strike_price_quote_hash)\n\n    base_transfer: bool = self.base.transferFrom(self.buyer, self.issuer, base_volume_exercised)\n    assert base_transfer\n    asset_transfer: bool = self.asset.transferFrom(self.issuer, self.buyer, asset_volume_exercised)\n    assert asset_transfer\n\n    self.volume = self.volume - asset_volume_exercised\n\n    self.state = STATE_EXERCISED\n\n## Exercise wrappers: can only be called by buyer.\n# Specify how many to buy\n@public\ndef exercise_from_asset(strike_price_base: uint256, strike_price_quote: uint256,\n                        salt: bytes32, asset_volume_exercised: uint256):\n    assert (msg.sender == self.buyer)\n\n    base_volume_exercised: uint256 = (asset_volume_exercised * strike_price_quote) / strike_price_base\n\n    self.exercise_internal(strike_price_base, strike_price_quote,\n                          salt,\n                          base_volume_exercised, asset_volume_exercised)\n\n\n# Specify how many to sell\n@public\ndef exercise_from_base(strike_price_base: uint256, strike_price_quote: uint256,\n                        salt: bytes32, base_volume_exercised: uint256):\n    assert (msg.sender == self.buyer)\n\n    asset_volume_exercised: uint256 = (base_volume_exercised * strike_price_base) / strike_price_quote\n\n    self.exercise_internal(strike_price_base, strike_price_quote,\n                          salt,\n                          base_volume_exercised, asset_volume_exercised)\n\n\n## Marks option as expired and refunds issuer.\n# Can call either before activation (to abort) or after expiry time\n# Can only be called by issuer\n@public\ndef expire():\n    assert (msg.sender == self.issuer)\n    assert (self.expiry_time <= block.timestamp) or (self.state == STATE_COLLATERALIZED)\n    assert (self.state != STATE_EXPIRED)\n\n    asset_transfer: bool = self.asset.transfer(self.issuer, self.volume)\n    assert asset_transfer\n\n    self.state = STATE_EXPIRED\n\n# Returns all information about the contract in one go\n@public\n@constant\ndef get_info() -> (address, address, address, address,\n                    uint256, bytes32, bytes32,\n                    uint256, timestamp, timestamp, uint256):\n    return (self.issuer, self.buyer, self.base_addr, self.asset_addr,\n            self.fee, self.strike_price_base_hash, self.strike_price_quote_hash,\n            self.volume, self.maturity_time, self.expiry_time, self.state)\n",
  "sourcePath": "/Users/Karim/Desktop/atomicoptions/contracts/silent_option.vy",
  "compiler": {
    "name": "vyper",
    "version": "0.1.0b12+commit.32ce6c9"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-10-08T02:34:14.332Z"
}