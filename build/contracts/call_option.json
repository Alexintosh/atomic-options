{
  "contractName": "call_option",
  "abi": [
    {
      "name": "setup",
      "outputs": [],
      "inputs": [
        {
          "type": "address",
          "name": "_issuer"
        },
        {
          "type": "address",
          "name": "_buyer"
        },
        {
          "type": "address",
          "name": "_base_addr"
        },
        {
          "type": "address",
          "name": "_asset_addr"
        },
        {
          "type": "uint256",
          "name": "_fee"
        },
        {
          "type": "uint256",
          "name": "_strike_price_base"
        },
        {
          "type": "uint256",
          "name": "_strike_price_quote"
        },
        {
          "type": "uint256",
          "name": "_volume"
        },
        {
          "type": "uint256",
          "unit": "sec",
          "name": "_maturity_time"
        },
        {
          "type": "uint256",
          "unit": "sec",
          "name": "_expiry_time"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 456081
    },
    {
      "name": "collateralize",
      "outputs": [],
      "inputs": [],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 39135
    },
    {
      "name": "pay_fee",
      "outputs": [],
      "inputs": [],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 39366
    },
    {
      "name": "exercise_from_asset",
      "outputs": [],
      "inputs": [
        {
          "type": "uint256",
          "name": "asset_volume_exercised"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 80449
    },
    {
      "name": "exercise_from_base",
      "outputs": [],
      "inputs": [
        {
          "type": "uint256",
          "name": "base_volume_exercised"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 80479
    },
    {
      "name": "expire",
      "outputs": [],
      "inputs": [],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 39493
    },
    {
      "name": "get_info",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        },
        {
          "type": "address",
          "name": "out"
        },
        {
          "type": "address",
          "name": "out"
        },
        {
          "type": "address",
          "name": "out"
        },
        {
          "type": "uint256",
          "name": "out"
        },
        {
          "type": "uint256",
          "name": "out"
        },
        {
          "type": "uint256",
          "name": "out"
        },
        {
          "type": "uint256",
          "name": "out"
        },
        {
          "type": "uint256",
          "unit": "sec",
          "name": "out"
        },
        {
          "type": "uint256",
          "unit": "sec",
          "name": "out"
        },
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 2974
    },
    {
      "name": "issuer",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 791
    },
    {
      "name": "buyer",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 821
    },
    {
      "name": "base_addr",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 851
    },
    {
      "name": "asset_addr",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 881
    },
    {
      "name": "fee",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 911
    },
    {
      "name": "strike_price_base",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 941
    },
    {
      "name": "strike_price_quote",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 971
    },
    {
      "name": "volume",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1001
    },
    {
      "name": "maturity_time",
      "outputs": [
        {
          "type": "uint256",
          "unit": "sec",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1031
    },
    {
      "name": "expiry_time",
      "outputs": [
        {
          "type": "uint256",
          "unit": "sec",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1061
    },
    {
      "name": "state",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1091
    }
  ],
  "bytecode": "0x61089456600436101561000d5761088a565b600035601c52740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a05263c31721ec60005114156101895734156100ba57600080fd5b60043560205181106100cb57600080fd5b5060243560205181106100dd57600080fd5b5060443560205181106100ef57600080fd5b50606435602051811061010157600080fd5b50600a541561010f57600080fd5b6064356044351861011f57600080fd5b6101043561012435114261012435111661013857600080fd5b60043560005560243560015560443560025560643560035560843560045560a43560055560c43560065560e4356007556101043560085561012435600955604435600b55606435600c556001600a55005b63eef9a8d5600051141561023d5734156101a257600080fd5b60005433146101b057600080fd5b6001600a54146101bf57600080fd5b42600954116101cd57600080fd5b600c543b6101da57600080fd5b600c5430186101e857600080fd5b602061022060646323b872dd6101605260005461018052306101a0526007546101c05261017c6000600c545af161021e57600080fd5b60005061022051610140526101405161023657600080fd5b6002600a55005b639f771e1e60005114156102f357341561025657600080fd5b600154331461026457600080fd5b6002600a541461027357600080fd5b426009541161028157600080fd5b600b543b61028e57600080fd5b600b54301861029c57600080fd5b602061022060646323b872dd61016052600154610180526000546101a0526004546101c05261017c6000600b545af16102d457600080fd5b6000506102205161014052610140516102ec57600080fd5b6003600a55005b60001561045c575b61018052610140526101605242600854111542600954111661031c57600080fd5b6004600a54146003600a54141761033257600080fd5b6000610140511161034257600080fd5b600754610160511115600061016051111661035c57600080fd5b600b543b61036957600080fd5b600b54301861037757600080fd5b602061028060646323b872dd6101c0526001546101e0526000546102005261014051610220526101dc6000600b545af16103b057600080fd5b600050610280516101a0526101a0516103c857600080fd5b600c543b6103d557600080fd5b600c5430186103e357600080fd5b602061038060646323b872dd6102c0526000546102e0526001546103005261016051610320526102dc6000600c545af161041c57600080fd5b600050610380516102a0526102a05161043457600080fd5b61016051600754101561044657600080fd5b61016051600754036007556004600a5561018051565b6396f5a49f60005114156104fd57341561047557600080fd5b600154331461048357600080fd5b60055461048f57600080fd5b60055460043515156104a25760006104c2565b6006546004356006546004350204146104ba57600080fd5b600654600435025b04610140526101405163e3b3c94661018052610140516101a0526004356101c0526101c0516101a051600658016102fb565b61014052600050005b639ce0c9bd600051141561059e57341561051657600080fd5b600154331461052457600080fd5b60065461053057600080fd5b6006546004351515610543576000610563565b60055460043560055460043502041461055b57600080fd5b600554600435025b04610140526101405163e3b3c946610180526004356101a052610140516101c0526101c0516101a051600658016102fb565b61014052600050005b6379599f9660005114156106555734156105b757600080fd5b60005433146105c557600080fd5b6002600a5414426009541115176105db57600080fd5b6005600a54186105ea57600080fd5b600c543b6105f757600080fd5b600c54301861060557600080fd5b6020610200604463a9059cbb61016052600054610180526007546101a05261017c6000600c545af161063657600080fd5b60005061020051610140526101405161064e57600080fd5b6005600a55005b636058348860005114156106dc57341561066e57600080fd5b61016061014052610160600054815260015481602001526002548160400152600354816060015260045481608001526005548160a001526006548160c001526007548160e00152600854816101000152600954816101200152600a548161014001525061014051610160f350005b631d14384860005114156107035734156106f557600080fd5b60005460005260206000f350005b637150d8ae600051141561072a57341561071c57600080fd5b60015460005260206000f350005b63a77f5599600051141561075157341561074357600080fd5b60025460005260206000f350005b635f727189600051141561077857341561076a57600080fd5b60035460005260206000f350005b63ddca3f43600051141561079f57341561079157600080fd5b60045460005260206000f350005b63ba22158560005114156107c65734156107b857600080fd5b60055460005260206000f350005b63e1b8d40f60005114156107ed5734156107df57600080fd5b60065460005260206000f350005b63c618a1e4600051141561081457341561080657600080fd5b60075460005260206000f350005b63879a031a600051141561083b57341561082d57600080fd5b60085460005260206000f350005b63fe3f3b81600051141561086257341561085457600080fd5b60095460005260206000f350005b63c19d93fb600051141561088957341561087b57600080fd5b600a5460005260206000f350005b5b60006000fd5b61000461089403610004600039610004610894036000f3",
  "deployedBytecode": "0x600436101561000d5761088a565b600035601c52740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a05263c31721ec60005114156101895734156100ba57600080fd5b60043560205181106100cb57600080fd5b5060243560205181106100dd57600080fd5b5060443560205181106100ef57600080fd5b50606435602051811061010157600080fd5b50600a541561010f57600080fd5b6064356044351861011f57600080fd5b6101043561012435114261012435111661013857600080fd5b60043560005560243560015560443560025560643560035560843560045560a43560055560c43560065560e4356007556101043560085561012435600955604435600b55606435600c556001600a55005b63eef9a8d5600051141561023d5734156101a257600080fd5b60005433146101b057600080fd5b6001600a54146101bf57600080fd5b42600954116101cd57600080fd5b600c543b6101da57600080fd5b600c5430186101e857600080fd5b602061022060646323b872dd6101605260005461018052306101a0526007546101c05261017c6000600c545af161021e57600080fd5b60005061022051610140526101405161023657600080fd5b6002600a55005b639f771e1e60005114156102f357341561025657600080fd5b600154331461026457600080fd5b6002600a541461027357600080fd5b426009541161028157600080fd5b600b543b61028e57600080fd5b600b54301861029c57600080fd5b602061022060646323b872dd61016052600154610180526000546101a0526004546101c05261017c6000600b545af16102d457600080fd5b6000506102205161014052610140516102ec57600080fd5b6003600a55005b60001561045c575b61018052610140526101605242600854111542600954111661031c57600080fd5b6004600a54146003600a54141761033257600080fd5b6000610140511161034257600080fd5b600754610160511115600061016051111661035c57600080fd5b600b543b61036957600080fd5b600b54301861037757600080fd5b602061028060646323b872dd6101c0526001546101e0526000546102005261014051610220526101dc6000600b545af16103b057600080fd5b600050610280516101a0526101a0516103c857600080fd5b600c543b6103d557600080fd5b600c5430186103e357600080fd5b602061038060646323b872dd6102c0526000546102e0526001546103005261016051610320526102dc6000600c545af161041c57600080fd5b600050610380516102a0526102a05161043457600080fd5b61016051600754101561044657600080fd5b61016051600754036007556004600a5561018051565b6396f5a49f60005114156104fd57341561047557600080fd5b600154331461048357600080fd5b60055461048f57600080fd5b60055460043515156104a25760006104c2565b6006546004356006546004350204146104ba57600080fd5b600654600435025b04610140526101405163e3b3c94661018052610140516101a0526004356101c0526101c0516101a051600658016102fb565b61014052600050005b639ce0c9bd600051141561059e57341561051657600080fd5b600154331461052457600080fd5b60065461053057600080fd5b6006546004351515610543576000610563565b60055460043560055460043502041461055b57600080fd5b600554600435025b04610140526101405163e3b3c946610180526004356101a052610140516101c0526101c0516101a051600658016102fb565b61014052600050005b6379599f9660005114156106555734156105b757600080fd5b60005433146105c557600080fd5b6002600a5414426009541115176105db57600080fd5b6005600a54186105ea57600080fd5b600c543b6105f757600080fd5b600c54301861060557600080fd5b6020610200604463a9059cbb61016052600054610180526007546101a05261017c6000600c545af161063657600080fd5b60005061020051610140526101405161064e57600080fd5b6005600a55005b636058348860005114156106dc57341561066e57600080fd5b61016061014052610160600054815260015481602001526002548160400152600354816060015260045481608001526005548160a001526006548160c001526007548160e00152600854816101000152600954816101200152600a548161014001525061014051610160f350005b631d14384860005114156107035734156106f557600080fd5b60005460005260206000f350005b637150d8ae600051141561072a57341561071c57600080fd5b60015460005260206000f350005b63a77f5599600051141561075157341561074357600080fd5b60025460005260206000f350005b635f727189600051141561077857341561076a57600080fd5b60035460005260206000f350005b63ddca3f43600051141561079f57341561079157600080fd5b60045460005260206000f350005b63ba22158560005114156107c65734156107b857600080fd5b60055460005260206000f350005b63e1b8d40f60005114156107ed5734156107df57600080fd5b60065460005260206000f350005b63c618a1e4600051141561081457341561080657600080fd5b60075460005260206000f350005b63879a031a600051141561083b57341561082d57600080fd5b60085460005260206000f350005b63fe3f3b81600051141561086257341561085457600080fd5b60095460005260206000f350005b63c19d93fb600051141561088957341561087b57600080fd5b600a5460005260206000f350005b5b60006000fd",
  "source": "from vyper.interfaces import ERC20\n\n## Basic information\n# Buyer and issuer of the option\nissuer: public(address)\nbuyer: public(address)\n# Address of the base (that you pay), asset (being bought)\nbase_addr: public(address)\nasset_addr: public(address)\n\n## Financial information\n# Fee\nfee: public(uint256)\n# Strike price [i.e. (strike_price_base * base_volume) / strike_price_quote = asset_volume]\nstrike_price_base: public(uint256)\nstrike_price_quote: public(uint256)\nvolume: public(uint256)\n# Option can be exercised between maturity_time and expiry_time\nmaturity_time: public(timestamp)\nexpiry_time: public(timestamp)\n\n## Contract states\nstate: public(uint256)\nSTATE_UNINITIALIZED: constant(uint256) = 0\nSTATE_INITIALIZED: constant(uint256) = 1\nSTATE_COLLATERALIZED: constant(uint256) = 2\nSTATE_ACTIVE: constant(uint256) = 3\nSTATE_EXERCISED: constant(uint256) = 4\nSTATE_EXPIRED: constant(uint256) = 5\n\n## External contracts\n# Callable base and asset ERC20s\nbase: ERC20\nasset: ERC20\n\n@public\ndef setup(_issuer: address, _buyer: address,\n          _base_addr: address, _asset_addr: address,\n          _fee: uint256, _strike_price_base: uint256, _strike_price_quote: uint256,\n          _volume: uint256,\n          _maturity_time: timestamp, _expiry_time: timestamp):\n    assert (self.state == STATE_UNINITIALIZED)\n    assert (_base_addr != _asset_addr)\n    assert (_expiry_time > block.timestamp) and (_expiry_time > _maturity_time)\n\n    self.issuer = _issuer\n    self.buyer = _buyer\n    self.base_addr = _base_addr\n    self.asset_addr = _asset_addr\n    self.fee = _fee\n    self.strike_price_base = _strike_price_base\n    self.strike_price_quote = _strike_price_quote\n    self.volume = _volume\n    self.maturity_time = _maturity_time\n    self.expiry_time = _expiry_time\n\n    self.base = ERC20(_base_addr)\n    self.asset = ERC20(_asset_addr)\n\n    self.state = STATE_INITIALIZED\n\n## Collateralizes option\n@public\ndef collateralize():\n    assert (msg.sender == self.issuer)\n    assert (self.state == STATE_INITIALIZED)\n    assert (self.expiry_time > block.timestamp)\n\n    asset_transfer: bool = self.asset.transferFrom(self.issuer, self, self.volume)\n    assert asset_transfer\n\n    self.state = STATE_COLLATERALIZED\n\n## Pays fee to issuer\n@public\ndef pay_fee():\n    assert (msg.sender == self.buyer)\n    assert (self.state == STATE_COLLATERALIZED)\n    assert (self.expiry_time > block.timestamp)\n\n    base_transfer: bool = self.base.transferFrom(self.buyer, self.issuer, self.fee)\n    assert base_transfer\n\n    self.state = STATE_ACTIVE\n\n## Exercises the option and refunds the issuer for unused volume.\n# Internal function for core logic\n@private\ndef exercise_internal(base_volume_exercised: uint256, asset_volume_exercised: uint256):\n    assert (self.expiry_time > block.timestamp) and (self.maturity_time <= block.timestamp)\n    assert (self.state == STATE_ACTIVE) or (self.state == STATE_EXERCISED)\n    assert (base_volume_exercised > 0)\n    assert (asset_volume_exercised > 0) and (asset_volume_exercised <= self.volume)\n\n    base_transfer: bool = self.base.transferFrom(self.buyer, self.issuer, base_volume_exercised)\n    assert base_transfer\n    asset_transfer: bool = self.asset.transferFrom(self.issuer, self.buyer, asset_volume_exercised)\n    assert asset_transfer\n\n    self.volume = self.volume - asset_volume_exercised\n\n    self.state = STATE_EXERCISED\n\n## Exercise wrappers: can only be called by buyer.\n# Specify how many to buy\n@public\ndef exercise_from_asset(asset_volume_exercised: uint256):\n    assert (msg.sender == self.buyer)\n\n    base_volume_exercised: uint256 = (asset_volume_exercised * self.strike_price_quote) / self.strike_price_base\n\n    self.exercise_internal(base_volume_exercised, asset_volume_exercised)\n\n\n# Specify how many to sell\n@public\ndef exercise_from_base(base_volume_exercised: uint256):\n    assert (msg.sender == self.buyer)\n\n    asset_volume_exercised: uint256 = (base_volume_exercised * self.strike_price_base) / self.strike_price_quote\n\n    self.exercise_internal(base_volume_exercised, asset_volume_exercised)\n\n## Marks option as expired and refunds issuer.\n# Can call either before activation (to abort) or after expiry time\n# Can only be called by issuer\n@public\ndef expire():\n    assert (msg.sender == self.issuer)\n    assert (self.expiry_time <= block.timestamp) or (self.state == STATE_COLLATERALIZED)\n    assert (self.state != STATE_EXPIRED)\n\n    asset_transfer: bool = self.asset.transfer(self.issuer, self.volume)\n    assert asset_transfer\n\n    self.state = STATE_EXPIRED\n\n# Returns all information about the contract in one go\n@public\n@constant\ndef get_info() -> (address, address, address, address,\n                    uint256, uint256, uint256,\n                    uint256, timestamp, timestamp, uint256):\n    return (self.issuer, self.buyer, self.base_addr, self.asset_addr,\n            self.fee, self.strike_price_base, self.strike_price_quote,\n            self.volume, self.maturity_time, self.expiry_time, self.state)\n",
  "sourcePath": "/Users/Karim/Desktop/atomicoptions/contracts/call_option.vy",
  "compiler": {
    "name": "vyper",
    "version": "0.1.0b12+commit.32ce6c9"
  },
  "networks": {
    "1569596394161": {
      "events": {},
      "links": {},
      "address": "0xCfEB869F69431e42cdB54A4F4f105C19C080A601",
      "transactionHash": "0x7cdfde162c52fd967485cb320a124be1978067fad39616ca87346dce690b6a55"
    },
    "1569597887881": {
      "events": {},
      "links": {},
      "address": "0xCfEB869F69431e42cdB54A4F4f105C19C080A601",
      "transactionHash": "0x7cdfde162c52fd967485cb320a124be1978067fad39616ca87346dce690b6a55"
    },
    "1569654368394": {
      "events": {},
      "links": {},
      "address": "0xCfEB869F69431e42cdB54A4F4f105C19C080A601",
      "transactionHash": "0x59c4cad78d8623d0a0d73dbad7517ee04b4516c165a9ea30f906641c1e2818d3"
    },
    "1569778904463": {
      "events": {},
      "links": {},
      "address": "0xCfEB869F69431e42cdB54A4F4f105C19C080A601",
      "transactionHash": "0x59c4cad78d8623d0a0d73dbad7517ee04b4516c165a9ea30f906641c1e2818d3"
    }
  },
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-10-04T19:53:48.798Z"
}