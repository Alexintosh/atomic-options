{
  "contractName": "call_option",
  "abi": [
    {
      "name": "setup",
      "outputs": [],
      "inputs": [
        {
          "type": "address",
          "name": "_issuer"
        },
        {
          "type": "address",
          "name": "_buyer"
        },
        {
          "type": "address",
          "name": "_base_addr"
        },
        {
          "type": "address",
          "name": "_asset_addr"
        },
        {
          "type": "uint256",
          "name": "_fee"
        },
        {
          "type": "uint256",
          "name": "_strike_price_base"
        },
        {
          "type": "uint256",
          "name": "_strike_price_quote"
        },
        {
          "type": "uint256",
          "name": "_volume"
        },
        {
          "type": "uint256",
          "unit": "sec",
          "name": "_maturity_time"
        },
        {
          "type": "uint256",
          "unit": "sec",
          "name": "_expiry_time"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 456081
    },
    {
      "name": "check_collateralization",
      "outputs": [],
      "inputs": [],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 41343
    },
    {
      "name": "relay_fee",
      "outputs": [],
      "inputs": [],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 44145
    },
    {
      "name": "exercise",
      "outputs": [],
      "inputs": [],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 80788
    },
    {
      "name": "expire",
      "outputs": [],
      "inputs": [],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 41051
    },
    {
      "name": "withdraw_excess_base",
      "outputs": [],
      "inputs": [
        {
          "type": "uint256",
          "name": "amount"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 5187
    },
    {
      "name": "withdraw_excess_asset",
      "outputs": [],
      "inputs": [
        {
          "type": "uint256",
          "name": "amount"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 5766
    },
    {
      "name": "get_info",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        },
        {
          "type": "address",
          "name": "out"
        },
        {
          "type": "address",
          "name": "out"
        },
        {
          "type": "address",
          "name": "out"
        },
        {
          "type": "uint256",
          "name": "out"
        },
        {
          "type": "uint256",
          "name": "out"
        },
        {
          "type": "uint256",
          "name": "out"
        },
        {
          "type": "uint256",
          "name": "out"
        },
        {
          "type": "uint256",
          "unit": "sec",
          "name": "out"
        },
        {
          "type": "uint256",
          "unit": "sec",
          "name": "out"
        },
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 2974
    },
    {
      "name": "issuer",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 791
    },
    {
      "name": "buyer",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 821
    },
    {
      "name": "base_addr",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 851
    },
    {
      "name": "asset_addr",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 881
    },
    {
      "name": "fee",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 911
    },
    {
      "name": "strike_price_base",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 941
    },
    {
      "name": "strike_price_quote",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 971
    },
    {
      "name": "volume",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1001
    },
    {
      "name": "maturity_time",
      "outputs": [
        {
          "type": "uint256",
          "unit": "sec",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1031
    },
    {
      "name": "expiry_time",
      "outputs": [
        {
          "type": "uint256",
          "unit": "sec",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1061
    },
    {
      "name": "state",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1091
    }
  ],
  "bytecode": "0x610adb56600436101561000d57610ad1565b600035601c52740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a05263c31721ec60005114156101895734156100ba57600080fd5b60043560205181106100cb57600080fd5b5060243560205181106100dd57600080fd5b5060443560205181106100ef57600080fd5b50606435602051811061010157600080fd5b50600a541561010f57600080fd5b6064356044351861011f57600080fd5b6101043561012435114261012435111661013857600080fd5b60043560005560243560015560443560025560643560035560843560045560a43560055560c43560065560e4356007556101043560085561012435600955604435600b55606435600c556001600a55005b633c48206e600051141561029c5734156101a257600080fd5b6001600a54146101b157600080fd5b42600954116101bf57600080fd5b600c543b6101cc57600080fd5b600c5430186101da57600080fd5b60206101e060246370a0823161016052306101805261017c600c545afa61020057600080fd5b6000506101e0516101405260075461014051101561021d57600080fd5b60075461014051111561029457600c543b61023757600080fd5b600c54301861024557600080fd5b60206102a0604463a9059cbb610200526000546102205260075461014051101561026e57600080fd5b60075461014051036102405261021c6000600c545af161028d57600080fd5b6000506102a05b506002600a55005b637fd8f6db60005114156104025734156102b557600080fd5b6002600a54146102c457600080fd5b42600954116102d257600080fd5b600b543b6102df57600080fd5b600b5430186102ed57600080fd5b60206101e060246370a0823161016052306101805261017c600b545afa61031357600080fd5b6000506101e0516101405260045461014051101561033057600080fd5b600b543b61033d57600080fd5b600b54301861034b57600080fd5b60206102a0604463a9059cbb61020052600054610220526004546102405261021c6000600b545af161037c57600080fd5b6000506102a0506004546101405111156103fa57600b543b61039d57600080fd5b600b5430186103ab57600080fd5b6020610360604463a9059cbb6102c0526001546102e0526004546101405110156103d457600080fd5b6004546101405103610300526102dc6000600b545af16103f357600080fd5b6000506103605b506003600a55005b63d32cb0fe60005114156105c657341561041b57600080fd5b600154331461042957600080fd5b42600854111542600954111661043e57600080fd5b6004600a54146003600a54141761045457600080fd5b600b543b61046157600080fd5b600b54301861046f57600080fd5b60206101e060246370a0823161016052306101805261017c600b545afa61049557600080fd5b6000506101e051610140526006546104ac57600080fd5b6006546101405115156104c05760006104e3565b60055461014051600554610140510204146104da57600080fd5b60055461014051025b04610200526007546102005111156104fa57600080fd5b600b543b61050757600080fd5b600b54301861051557600080fd5b60206102c0604463a9059cbb6102205260005461024052610140516102605261023c6000600b545af161054757600080fd5b6000506102c050600c543b61055b57600080fd5b600c54301861056957600080fd5b6020610380604463a9059cbb6102e0526001546103005261020051610320526102fc6000600c545af161059b57600080fd5b600050610380506102005160075410156105b457600080fd5b61020051600754036007556004600a55005b6379599f9660005114156106bf5734156105df57600080fd5b60005433146001543314176105f357600080fd5b6002600a54144260095411151761060957600080fd5b6005600a541861061857600080fd5b600c543b61062557600080fd5b600c54301861063357600080fd5b60206101e060246370a0823161016052306101805261017c600c545afa61065957600080fd5b6000506101e05161014052600c543b61067157600080fd5b600c54301861067f57600080fd5b60206102a0604463a9059cbb6102005260005461022052610140516102405261021c6000600c545af16106b157600080fd5b6000506102a0506005600a55005b63115ed8c460005114156107a15734156106d857600080fd5b60015433146106e657600080fd5b600b543b6106f357600080fd5b600b54301861070157600080fd5b60206101e060246370a0823161016052306101805261017c600b545afa61072757600080fd5b6000506101e05161014052600060043510156004356101405110151661074c57600080fd5b600c543b61075957600080fd5b600c54301861076757600080fd5b60206102a0604463a9059cbb61020052600154610220526004356102405261021c6000600c545af161079857600080fd5b6000506102a050005b63535dd9a0600051141561089c5734156107ba57600080fd5b60005433146107c857600080fd5b600c543b6107d557600080fd5b600c5430186107e357600080fd5b60206101e060246370a0823161016052306101805261017c600c545afa61080957600080fd5b6000506101e051610140526000600435101560043560075460043501101561083057600080fd5b600754600435016101405110151661084757600080fd5b600c543b61085457600080fd5b600c54301861086257600080fd5b60206102a0604463a9059cbb61020052600054610220526004356102405261021c6000600c545af161089357600080fd5b6000506102a050005b636058348860005114156109235734156108b557600080fd5b61016061014052610160600054815260015481602001526002548160400152600354816060015260045481608001526005548160a001526006548160c001526007548160e00152600854816101000152600954816101200152600a548161014001525061014051610160f350005b631d143848600051141561094a57341561093c57600080fd5b60005460005260206000f350005b637150d8ae600051141561097157341561096357600080fd5b60015460005260206000f350005b63a77f5599600051141561099857341561098a57600080fd5b60025460005260206000f350005b635f72718960005114156109bf5734156109b157600080fd5b60035460005260206000f350005b63ddca3f4360005114156109e65734156109d857600080fd5b60045460005260206000f350005b63ba2215856000511415610a0d5734156109ff57600080fd5b60055460005260206000f350005b63e1b8d40f6000511415610a34573415610a2657600080fd5b60065460005260206000f350005b63c618a1e46000511415610a5b573415610a4d57600080fd5b60075460005260206000f350005b63879a031a6000511415610a82573415610a7457600080fd5b60085460005260206000f350005b63fe3f3b816000511415610aa9573415610a9b57600080fd5b60095460005260206000f350005b63c19d93fb6000511415610ad0573415610ac257600080fd5b600a5460005260206000f350005b5b60006000fd5b610004610adb03610004600039610004610adb036000f3",
  "deployedBytecode": "0x600436101561000d57610ad1565b600035601c52740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a05263c31721ec60005114156101895734156100ba57600080fd5b60043560205181106100cb57600080fd5b5060243560205181106100dd57600080fd5b5060443560205181106100ef57600080fd5b50606435602051811061010157600080fd5b50600a541561010f57600080fd5b6064356044351861011f57600080fd5b6101043561012435114261012435111661013857600080fd5b60043560005560243560015560443560025560643560035560843560045560a43560055560c43560065560e4356007556101043560085561012435600955604435600b55606435600c556001600a55005b633c48206e600051141561029c5734156101a257600080fd5b6001600a54146101b157600080fd5b42600954116101bf57600080fd5b600c543b6101cc57600080fd5b600c5430186101da57600080fd5b60206101e060246370a0823161016052306101805261017c600c545afa61020057600080fd5b6000506101e0516101405260075461014051101561021d57600080fd5b60075461014051111561029457600c543b61023757600080fd5b600c54301861024557600080fd5b60206102a0604463a9059cbb610200526000546102205260075461014051101561026e57600080fd5b60075461014051036102405261021c6000600c545af161028d57600080fd5b6000506102a05b506002600a55005b637fd8f6db60005114156104025734156102b557600080fd5b6002600a54146102c457600080fd5b42600954116102d257600080fd5b600b543b6102df57600080fd5b600b5430186102ed57600080fd5b60206101e060246370a0823161016052306101805261017c600b545afa61031357600080fd5b6000506101e0516101405260045461014051101561033057600080fd5b600b543b61033d57600080fd5b600b54301861034b57600080fd5b60206102a0604463a9059cbb61020052600054610220526004546102405261021c6000600b545af161037c57600080fd5b6000506102a0506004546101405111156103fa57600b543b61039d57600080fd5b600b5430186103ab57600080fd5b6020610360604463a9059cbb6102c0526001546102e0526004546101405110156103d457600080fd5b6004546101405103610300526102dc6000600b545af16103f357600080fd5b6000506103605b506003600a55005b63d32cb0fe60005114156105c657341561041b57600080fd5b600154331461042957600080fd5b42600854111542600954111661043e57600080fd5b6004600a54146003600a54141761045457600080fd5b600b543b61046157600080fd5b600b54301861046f57600080fd5b60206101e060246370a0823161016052306101805261017c600b545afa61049557600080fd5b6000506101e051610140526006546104ac57600080fd5b6006546101405115156104c05760006104e3565b60055461014051600554610140510204146104da57600080fd5b60055461014051025b04610200526007546102005111156104fa57600080fd5b600b543b61050757600080fd5b600b54301861051557600080fd5b60206102c0604463a9059cbb6102205260005461024052610140516102605261023c6000600b545af161054757600080fd5b6000506102c050600c543b61055b57600080fd5b600c54301861056957600080fd5b6020610380604463a9059cbb6102e0526001546103005261020051610320526102fc6000600c545af161059b57600080fd5b600050610380506102005160075410156105b457600080fd5b61020051600754036007556004600a55005b6379599f9660005114156106bf5734156105df57600080fd5b60005433146001543314176105f357600080fd5b6002600a54144260095411151761060957600080fd5b6005600a541861061857600080fd5b600c543b61062557600080fd5b600c54301861063357600080fd5b60206101e060246370a0823161016052306101805261017c600c545afa61065957600080fd5b6000506101e05161014052600c543b61067157600080fd5b600c54301861067f57600080fd5b60206102a0604463a9059cbb6102005260005461022052610140516102405261021c6000600c545af16106b157600080fd5b6000506102a0506005600a55005b63115ed8c460005114156107a15734156106d857600080fd5b60015433146106e657600080fd5b600b543b6106f357600080fd5b600b54301861070157600080fd5b60206101e060246370a0823161016052306101805261017c600b545afa61072757600080fd5b6000506101e05161014052600060043510156004356101405110151661074c57600080fd5b600c543b61075957600080fd5b600c54301861076757600080fd5b60206102a0604463a9059cbb61020052600154610220526004356102405261021c6000600c545af161079857600080fd5b6000506102a050005b63535dd9a0600051141561089c5734156107ba57600080fd5b60005433146107c857600080fd5b600c543b6107d557600080fd5b600c5430186107e357600080fd5b60206101e060246370a0823161016052306101805261017c600c545afa61080957600080fd5b6000506101e051610140526000600435101560043560075460043501101561083057600080fd5b600754600435016101405110151661084757600080fd5b600c543b61085457600080fd5b600c54301861086257600080fd5b60206102a0604463a9059cbb61020052600054610220526004356102405261021c6000600c545af161089357600080fd5b6000506102a050005b636058348860005114156109235734156108b557600080fd5b61016061014052610160600054815260015481602001526002548160400152600354816060015260045481608001526005548160a001526006548160c001526007548160e00152600854816101000152600954816101200152600a548161014001525061014051610160f350005b631d143848600051141561094a57341561093c57600080fd5b60005460005260206000f350005b637150d8ae600051141561097157341561096357600080fd5b60015460005260206000f350005b63a77f5599600051141561099857341561098a57600080fd5b60025460005260206000f350005b635f72718960005114156109bf5734156109b157600080fd5b60035460005260206000f350005b63ddca3f4360005114156109e65734156109d857600080fd5b60045460005260206000f350005b63ba2215856000511415610a0d5734156109ff57600080fd5b60055460005260206000f350005b63e1b8d40f6000511415610a34573415610a2657600080fd5b60065460005260206000f350005b63c618a1e46000511415610a5b573415610a4d57600080fd5b60075460005260206000f350005b63879a031a6000511415610a82573415610a7457600080fd5b60085460005260206000f350005b63fe3f3b816000511415610aa9573415610a9b57600080fd5b60095460005260206000f350005b63c19d93fb6000511415610ad0573415610ac257600080fd5b600a5460005260206000f350005b5b60006000fd",
  "source": "from vyper.interfaces import ERC20\n\n## Basic information\n# Buyer and issuer of the option\nissuer: public(address)\nbuyer: public(address)\n# Address of the base (that you pay), asset (being bought)\nbase_addr: public(address)\nasset_addr: public(address)\n\n## Financial information\n# Fee\nfee: public(uint256)\n# Strike price [i.e. (strike_price_base * base_volume) / strike_price_quote = asset_volume]\nstrike_price_base: public(uint256)\nstrike_price_quote: public(uint256)\nvolume: public(uint256)\n# Option can be exercised between maturity_time and expiry_time\nmaturity_time: public(timestamp)\nexpiry_time: public(timestamp)\n\n## Contract states\nstate: public(uint256)\nSTATE_UNINITIALIZED: constant(uint256) = 0\nSTATE_INITIALIZED: constant(uint256) = 1\nSTATE_COLLATERALIZED: constant(uint256) = 2\nSTATE_ACTIVE: constant(uint256) = 3\nSTATE_EXERCISED: constant(uint256) = 4\nSTATE_EXPIRED: constant(uint256) = 5\n\n## External contracts\n# Callable base and asset ERC20s\nbase: ERC20\nasset: ERC20\n\n@public\ndef setup(_issuer: address, _buyer: address,\n          _base_addr: address, _asset_addr: address,\n          _fee: uint256, _strike_price_base: uint256, _strike_price_quote: uint256,\n          _volume: uint256,\n          _maturity_time: timestamp, _expiry_time: timestamp):\n    assert (self.state == STATE_UNINITIALIZED)\n    assert (_base_addr != _asset_addr)\n    assert (_expiry_time > block.timestamp) and (_expiry_time > _maturity_time)\n\n    self.issuer = _issuer\n    self.buyer = _buyer\n    self.base_addr = _base_addr\n    self.asset_addr = _asset_addr\n    self.fee = _fee\n    self.strike_price_base = _strike_price_base\n    self.strike_price_quote = _strike_price_quote\n    self.volume = _volume\n    self.maturity_time = _maturity_time\n    self.expiry_time = _expiry_time\n\n    self.base = ERC20(_base_addr)\n    self.asset = ERC20(_asset_addr)\n\n    self.state = STATE_INITIALIZED\n\n## Checks that option has been collateralized by issuer.\n@public\ndef check_collateralization():\n    assert (self.state == STATE_INITIALIZED)\n    assert (self.expiry_time > block.timestamp)\n    asset_balance: uint256 = self.asset.balanceOf(self)\n    assert (asset_balance >= self.volume)\n    if asset_balance > self.volume:\n        self.asset.transfer(self.issuer, asset_balance - self.volume)\n\n    self.state = STATE_COLLATERALIZED\n\n## Checks that fee has been paid, relays to issuer.\n@public\ndef relay_fee():\n    assert (self.state == STATE_COLLATERALIZED)\n    assert (self.expiry_time > block.timestamp)\n    base_balance: uint256 = self.base.balanceOf(self)\n    assert (base_balance >= self.fee)\n    self.base.transfer(self.issuer, self.fee)\n    if base_balance > self.fee:\n        self.base.transfer(self.buyer, base_balance - self.fee)\n\n    self.state = STATE_ACTIVE\n\n## Exercises the option and refunds the issuer for unused volume.\n# Can only be called by buyer.\n@public\ndef exercise():\n    assert (msg.sender == self.buyer)\n    assert (self.expiry_time > block.timestamp) and (self.maturity_time <= block.timestamp)\n    assert (self.state == STATE_ACTIVE) or (self.state == STATE_EXERCISED)\n    base_balance: uint256 = self.base.balanceOf(self)\n    volume_exercised: uint256 = (base_balance * self.strike_price_base) / self.strike_price_quote\n    assert (volume_exercised <= self.volume)\n    self.base.transfer(self.issuer, base_balance)\n    self.asset.transfer(self.buyer, volume_exercised)\n\n    self.volume = self.volume - volume_exercised\n\n    self.state = STATE_EXERCISED\n\n## Marks option as expired and refunds issuer.\n# Can call either before activation (to abort) or after exipry time\n# Can only be called by issuer\n@public\ndef expire():\n    assert (msg.sender == self.buyer) or (msg.sender == self.issuer)\n    assert (self.expiry_time <= block.timestamp) or (self.state == STATE_COLLATERALIZED)\n    assert (self.state != STATE_EXPIRED)\n    asset_balance: uint256 = self.asset.balanceOf(self)\n    self.asset.transfer(self.issuer, asset_balance)\n\n    self.state = STATE_EXPIRED\n\n## Excess withdrawal functions\n# Allow buyer/issuer to withdraw excess base/asset\n\n# Can only be called by buyer\n@public\ndef withdraw_excess_base(amount: uint256):\n    assert (msg.sender == self.buyer)\n    base_balance: uint256 = self.base.balanceOf(self)\n    assert (base_balance >= amount) and (amount >= 0)\n    self.asset.transfer(self.buyer, amount)\n\n# Can only be called by issuer\n@public\ndef withdraw_excess_asset(amount: uint256):\n    assert (msg.sender == self.issuer)\n    asset_balance: uint256 = self.asset.balanceOf(self)\n    assert (asset_balance >= amount + self.volume) and (amount >= 0)\n    self.asset.transfer(self.issuer, amount)\n\n# Returns all information about the contract in one go\n@public\n@constant\ndef get_info() -> (address, address, address, address,\n                    uint256, uint256, uint256,\n                    uint256, timestamp, timestamp, uint256):\n    return (self.issuer, self.buyer, self.base_addr, self.asset_addr,\n            self.fee, self.strike_price_base, self.strike_price_quote,\n            self.volume, self.maturity_time, self.expiry_time, self.state)\n",
  "sourcePath": "/Users/Karim/Desktop/atomicoptions/contracts/call_option.vy",
  "compiler": {
    "name": "vyper",
    "version": "0.1.0b12+commit.32ce6c9"
  },
  "networks": {
    "1569596394161": {
      "events": {},
      "links": {},
      "address": "0xCfEB869F69431e42cdB54A4F4f105C19C080A601",
      "transactionHash": "0x7cdfde162c52fd967485cb320a124be1978067fad39616ca87346dce690b6a55"
    },
    "1569597887881": {
      "events": {},
      "links": {},
      "address": "0xCfEB869F69431e42cdB54A4F4f105C19C080A601",
      "transactionHash": "0x7cdfde162c52fd967485cb320a124be1978067fad39616ca87346dce690b6a55"
    },
    "1569654368394": {
      "events": {},
      "links": {},
      "address": "0xCfEB869F69431e42cdB54A4F4f105C19C080A601",
      "transactionHash": "0x59c4cad78d8623d0a0d73dbad7517ee04b4516c165a9ea30f906641c1e2818d3"
    },
    "1569778904463": {
      "events": {},
      "links": {},
      "address": "0xCfEB869F69431e42cdB54A4F4f105C19C080A601",
      "transactionHash": "0x59c4cad78d8623d0a0d73dbad7517ee04b4516c165a9ea30f906641c1e2818d3"
    }
  },
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-10-01T01:55:20.029Z"
}